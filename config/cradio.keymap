/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&soft_off { hold-time-ms = <300>; };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        pass_norm_over: pass_norm_over {
            compatible = "zmk,behavior-hold-tap";
            label = "PASS_NORM_OVER";
            bindings = <&mac_pass_over>, <&mac_pass_norm>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <300>;
            hold-trigger-key-positions = <32>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        select_left {
            bindings = <&kp LC(LS(LEFT))>;
            key-positions = <31 0 30>;
            layers = <1>;
        };

        select_down {
            bindings = <&kp LC(LS(DOWN))>;
            key-positions = <1 30 31>;
            layers = <1>;
        };

        select_up {
            bindings = <&kp LC(LS(UP))>;
            key-positions = <30 31 2>;
            layers = <1>;
        };

        select_right {
            bindings = <&kp LC(LS(RIGHT))>;
            key-positions = <3 30 31>;
            layers = <1>;
        };
    };

    macros {
        mac_pass_norm: mpassnorm {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N9 &kp N9 &kp N7 &kp N9 &kp TAB &kp N2 &kp N1 &kp N6 &kp N9 &kp ENTER>;
            label = "MPASSNORM";
        };

        mac_pass_over: mpassover {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N6 &kp N4 &kp N3 &kp N5 &kp TAB &kp N1 &kp N2 &kp N3 &kp N6 &kp ENTER>;
            label = "MPASSOVER";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q  &kp W       &kp F       &kp P        &kp B             &kp J                &kp L        &kp U       &kp Y       &kp SQT
&kp A  &hm LGUI R  &hm LALT S  &hm LCTRL T  &kp G             &kp M                &hm RCTRL N  &hm RALT E  &hm RGUI I  &kp O
&kp Z  &kp X       &kp C       &kp D        &kp V             &kp K                &kp H        &kp COMMA   &kp PERIOD  &kp SLASH
                               &mo 1        &kp LEFT_SHIFT    &hm LG(LA(C)) SPACE  &mo 2
            >;
        };

        nav_layer {
            bindings = <
&kp HOME               &kp PAGE_DOWN      &kp PAGE_UP            &kp END                &kp ESC           &kp KP_PLUS   &kp KP_NUMBER_7  &kp KP_N8       &kp KP_N9             &kp KP_MULTIPLY
&kp LEFT_ARROW         &kp DOWN_ARROW     &kp UP_ARROW           &kp RIGHT_ARROW        &kp TAB           &kp KP_DOT    &hm RCTRL KP_N4  &hm RALT KP_N5  &hm RGUI KP_NUMBER_6  &kp KP_N0
&hm LC(Z) LA(LS(TAB))  &hm LC(X) LA(TAB)  &hm LC(C) LC(LS(TAB))  &hm LC(LS(V)) LC(TAB)  &kp DELETE        &kp KP_MINUS  &kp KP_N1        &kp KP_N2       &kp KP_N3             &kp KP_DIVIDE
                                                                 &mo 1                  &kp LEFT_SHIFT    &kp RETURN    &mo 2
            >;
        };

        sym_layer {
            bindings = <
&none      &none   &none     &none     &none            &none                &kp AMPS  &kp GRAVE  &kp TILDE  &kp BACKSLASH
&kp SEMI   &kp LT  &kp LBRC  &kp LPAR  &kp RBKT         &kp EQUAL            &kp DLLR  &kp PRCNT  &kp CARET  &kp UNDER
&kp COLON  &kp GT  &kp RBRC  &kp RPAR  &kp RBKT         &none                &kp EXCL  &kp AT     &kp HASH   &kp PIPE
                             &mo 1     &kp BACKSPACE    &pass_norm_over 0 0  &mo 2
            >;
        };

        tri_layer {
            bindings = <
&kp PRINTSCREEN  &kp C_MUTE       &kp C_VOLUME_DOWN      &kp C_VOLUME_UP   &bt BT_CLR        &none      &kp F7        &kp F8       &kp F9       &kp F10
&kp CAPS         &hm LGUI C_PREV  &hm LALT C_PLAY_PAUSE  &hm LCTRL C_NEXT  &kp C_STOP        &soft_off  &hm RCTRL F4  &hm RALT F5  &hm RGUI F6  &kp F11
&bt BT_SEL 4     &bt BT_SEL 3     &bt BT_SEL 2           &bt BT_SEL 1      &bt BT_SEL 0      &none      &kp F1        &kp F2       &kp F3       &kp F12
                                                         &trans            &kp LEFT_SHIFT    &none      &trans
            >;
        };
    };
};
